name: ci/cd
on:
  push:
    branches: ["master"]
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

jobs:
  linter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run linters
        run: pnpm lint-eslint

  build-and-push-hypesite:
    needs: linter
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5f4866a30a54f16a52d2ecb4a3898e9e424939cf
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@1294d94f8ee362ab42b6da04c35f4cd03a0e6af7
        with:
          images: ghcr.io/sonastea/hypesite

      - name: Build and push hypebot docker image
        uses: docker/build-push-action@2ce6beaad494ef1cf54cb885867cbeff15abd10c
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deployment:
    needs: build-and-push-hypesite
    runs-on: ubuntu-latest
    steps:
      - name: Deploy the hypesite image
        uses: appleboy/ssh-action@551964ebda1034f0b5449d74db25c42e371ca1f7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          script: |
            docker pull ghcr.io/sonastea/hypesite:master
            docker rm -f hypesite
            docker run -d --name hypesite --network=caddy_default -p 127.0.0.1:8080:80 ghcr.io/sonastea/hypesite:master
            docker image prune -f
